{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hamda\\\\Projects\\\\react-crash\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport About from \"./components/About\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n    getTasks();\n  }, []);\n\n  // Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch(\"http://localhost:5000/tasks\");\n    const data = await res.json();\n    return data;\n  };\n\n  // Fetch Task\n  const fetchTask = async id => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n    return data;\n  };\n\n  // Add Task\n  const addTask = async task => {\n    const res = await fetch(\"http://localhost:5000/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]);\n\n    // const id = Math.floor(Math.random() * 10000) + 1\n    // const newTask = { id, ...task }\n    // setTasks([...tasks, newTask])\n  };\n\n  // Delete Task\n  const deleteTask = async id => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"DELETE\"\n    });\n    //We should control the response status to decide if we will change the state or not.\n    res.status === 200 ? setTasks(tasks.filter(task => task.id !== id)) : alert(\"Error Deleting This Task\");\n  };\n\n  // Toggle Reminder\n  const toggleReminder = async id => {\n    const taskToToggle = await fetchTask(id);\n    const updTask = {\n      ...taskToToggle,\n      reminder: !taskToToggle.reminder\n    };\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(updTask)\n    });\n    const data = await res.json();\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      reminder: data.reminder\n    } : task));\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onAdd: () => setShowAddTask(!showAddTask),\n        showAdd: showAddTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n              onAdd: addTask\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 33\n            }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n              tasks: tasks,\n              onDelete: deleteTask,\n              onToggle: toggleReminder\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this) : \"No Tasks To Show\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"pA4snfDjny2P+O1a+6NjXQ6HzBU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","BrowserRouter","Router","Route","Routes","Header","Footer","Tasks","AddTask","About","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","showAddTask","setShowAddTask","tasks","setTasks","getTasks","tasksFromServer","fetchTasks","res","fetch","data","json","fetchTask","id","addTask","task","method","headers","body","JSON","stringify","deleteTask","status","filter","alert","toggleReminder","taskToToggle","updTask","reminder","map","children","className","onAdd","showAdd","fileName","_jsxFileName","lineNumber","columnNumber","path","element","length","onDelete","onToggle","_c","$RefreshReg$"],"sources":["C:/Users/hamda/Projects/react-crash/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport Tasks from \"./components/Tasks\";\r\nimport AddTask from \"./components/AddTask\";\r\nimport About from \"./components/About\";\r\n\r\nconst App = () => {\r\n  const [showAddTask, setShowAddTask] = useState(false);\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getTasks = async () => {\r\n      const tasksFromServer = await fetchTasks();\r\n      setTasks(tasksFromServer);\r\n    };\r\n\r\n    getTasks();\r\n  }, []);\r\n\r\n  // Fetch Tasks\r\n  const fetchTasks = async () => {\r\n    const res = await fetch(\"http://localhost:5000/tasks\");\r\n    const data = await res.json();\r\n\r\n    return data;\r\n  };\r\n\r\n  // Fetch Task\r\n  const fetchTask = async (id) => {\r\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\r\n    const data = await res.json();\r\n\r\n    return data;\r\n  };\r\n\r\n  // Add Task\r\n  const addTask = async (task) => {\r\n    const res = await fetch(\"http://localhost:5000/tasks\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(task),\r\n    });\r\n\r\n    const data = await res.json();\r\n\r\n    setTasks([...tasks, data]);\r\n\r\n    // const id = Math.floor(Math.random() * 10000) + 1\r\n    // const newTask = { id, ...task }\r\n    // setTasks([...tasks, newTask])\r\n  };\r\n\r\n  // Delete Task\r\n  const deleteTask = async (id) => {\r\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\r\n      method: \"DELETE\",\r\n    });\r\n    //We should control the response status to decide if we will change the state or not.\r\n    res.status === 200\r\n      ? setTasks(tasks.filter((task) => task.id !== id))\r\n      : alert(\"Error Deleting This Task\");\r\n  };\r\n\r\n  // Toggle Reminder\r\n  const toggleReminder = async (id) => {\r\n    const taskToToggle = await fetchTask(id);\r\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder };\r\n\r\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(updTask),\r\n    });\r\n\r\n    const data = await res.json();\r\n\r\n    setTasks(\r\n      tasks.map((task) =>\r\n        task.id === id ? { ...task, reminder: data.reminder } : task\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"container\">\r\n        <Header\r\n          onAdd={() => setShowAddTask(!showAddTask)}\r\n          showAdd={showAddTask}\r\n        />\r\n        <Routes>\r\n          <Route\r\n            path=\"/\"\r\n            element={\r\n              <>\r\n                {showAddTask && <AddTask onAdd={addTask} />}\r\n                {tasks.length > 0 ? (\r\n                  <Tasks\r\n                    tasks={tasks}\r\n                    onDelete={deleteTask}\r\n                    onToggle={toggleReminder}\r\n                  />\r\n                ) : (\r\n                  \"No Tasks To Show\"\r\n                )}\r\n              </>\r\n            }\r\n          />\r\n          <Route path=\"/about\" element={<About />} />\r\n        </Routes>\r\n        <Footer />\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}